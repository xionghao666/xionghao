redism默认总共有16个库(0～15)，默认端口号：6379
select 5 : 选择5号库
keys * : 通配符查询所有key
flushdb : 清楚当前库所有数据
flushall : 清空所有库
dbsize : 当前库大小
set key val : 存储 key/val 键值对
LPUSH KEY 1 2 3 4 5 : list 链表
LRANGE KEY 0 -1 : 查看当前list所有值
LPOP ： 从链表左侧出值
关于list 对于lpush lpop 是先进后出， rpush rpop 是后进后出
lrem key v0 v1 v2 : 删除链表中的值
ltrim key index0 index1 : 截取再重新赋值

redis的持久化指的是 RDB(redis data base) 和 AOF(append only file)
rdb默认保存文件 dump.rdb, 三种备份保存策略会触发自动备份数据
1. 1min 内 1万次 写操作 （默认选项）
2. 5min 内 10次 写操作
3. 15min 内 1次 写操作

save 命令开始自动备份当前数据
flushall 清除所有也可以出发备份操作
stop-writes-on-bgsave-error : 此配置参数指的是备份出错时停止写入
rdbcompression : 是否开启压缩
rdbchecksum : 是否开启数据格式校验

AOF是被写操作记录到 append.aof 文件中，两种备份方式都开启是默认先加载 aof文件

redis-check-aof --fix append.aof : 此命令是自动修复aof文件，当文件写入错乱时
aof也有三种写入策略
1. always 同步持久化每次写入都记录，比较消耗性能
2. everysec 每秒钟记录一次(默认配置)
3. no 从不记录


redis事务5大特性
1. 正常执行命令    multi(开始事务) exex(执行事务)
2. 放弃事务       discard
3. 全体连坐       加入事务队列中出错，全部不执行例如语法错误
4. 冤头债主       正常加入事务队列，执行阶段出错列入 1/0  那么可执行的成功不可执行的失败，所以说redis是不完整事务
5. watch监控     监控事务里涉及到的key,可导致事务终止

事务总共分为3个阶段：开启 -> 入队 -> 执行
单独的隔离操作 ： 事务中的所有命令都会序列化，按顺序执行，事务执行过程中不会被其他命令中断
没有隔离级别 ： 队列中的命令没有提交之前都不会被实际的执行
不保证原子性 ： redis同一个事务中如果有一个命令执行失败其后的命令仍然会被执行，无回滚


watch监控涉及 ： 悲观锁， 乐观锁， CAS(check and set)
unwatch命令将撤销对所有key对监控

悲观锁 ：对数据十分严格，加上锁，当前操作的数据不允许其他线程获取
乐观锁 ： 其他线程可以获取数据，但是更新时要去检查数据是否被修改过 （添加版本号，提交版本要大于当前版本）

在watch监控下事务执行过程中某个key 被其他线程加塞篡改，那么将导致事务失败抛出异常

redis订阅 ： 进程间的一种消息通信模式
订阅 ： subscribe channel1 channel2
发布 ： publish channel1 "message......"




